generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String   @id @default(uuid())
  name       String
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  billboards Billboard[] @relation("StoreToBillboard")
  category   Category[]  @relation("StoreToCategory")
  size       Size[]      @relation("StoreToSize")
  color      Color[]     @relation("StoreToColor")
  store      Product[]   @relation("StoreToProduct")

  @@map("store")
}

model Billboard {
  id         String   @id @default(uuid())
  label      String
  image_url  String
  store_id   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  store      Store      @relation("StoreToBillboard", fields: [store_id], references: [id])
  categories Category[] @relation("BillboardToCategory")

  @@index([store_id])
  @@map("billboard")
}

model Category {
  id           String   @id @default(uuid())
  name         String
  store_id     String
  billboard_id String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  store     Store     @relation("StoreToCategory", fields: [store_id], references: [id])
  billboard Billboard @relation("BillboardToCategory", fields: [billboard_id], references: [id])
  product   Product[] @relation("CategoryToProduct")

  @@index([store_id])
  @@index([billboard_id])
  @@map("category")
}

model Size {
  id         String   @id @default(uuid())
  name       String
  value      String
  store_id   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  store   Store     @relation("StoreToSize", fields: [store_id], references: [id])
  product Product[] @relation()

  @@index([store_id])
  @@map("size")
}

model Color {
  id         String   @id @default(uuid())
  name       String
  value      String
  store_id   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  store   Store     @relation("StoreToColor", fields: [store_id], references: [id])
  product Product[] @relation()

  @@index([store_id])
  @@map("color")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Int
  is_feature  Boolean  @default(false)
  is_archived Boolean  @default(false)
  store_id    String
  categoryId  String
  size_id     String
  color_id    String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  store    Store    @relation("StoreToProduct", fields: [store_id], references: [id])
  category Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  size     Size     @relation(fields: [size_id], references: [id])
  color    Color    @relation(fields: [color_id], references: [id])

  image Image[]

  @@index([color_id])
  @@index([size_id])
  @@index([categoryId])
  @@index([store_id])
  @@map("products")
}

model Image {
  id         String   @id @default(uuid())
  product_id String
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([product_id])
  @@map("image")
}
